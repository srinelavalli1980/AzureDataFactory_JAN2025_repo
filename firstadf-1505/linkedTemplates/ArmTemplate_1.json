{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "firstadf-1505"
		},
		"LS_Source_onprem_Sqlserver_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Source_onprem_Sqlserver'",
			"defaultValue": "integrated security=True;Data Source=DESKTOP-NUVB7F9\\SQLEXPRESS;Initial Catalog=devjan"
		},
		"LS_Source_onprem_Sqlserver_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_Source_onprem_Sqlserver'"
		},
		"LS_Source_onprem_Sqlserver_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "DESKTOP-NUVB7F9\\SRINIVASARAO"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DS_getMetaData_mini')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDBA_mini",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SCHEMA_NAME": {
						"type": "string"
					},
					"TABLE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_log_Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_log_json",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "emptyfile.json",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_metadata_exists')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDBA_mini",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SCHEMA_NAME": {
						"type": "string"
					},
					"TABLE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SCHEMA_NAME",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TABLE_NAME",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_multi_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Multi_file",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().p_folder",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Source_onprem_Sqlserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_Source_onprem_Sqlserver_connectionString')]",
					"userName": "[parameters('LS_Source_onprem_Sqlserver_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_Source_onprem_Sqlserver_password')]"
					}
				},
				"connectVia": {
					"referenceName": "on-prem-shir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_ONLY_NOT_IN_DESTINATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from raw to silver",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "silver"
								}
							}
						]
					},
					{
						"name": "Get MetadataSource",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Source",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "triggerdata",
									"container": "raw"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": null,
								"modifiedDatetimeEnd": null,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get MetadataSINK",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Source",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "files",
									"container": "silver"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get MetadataSINK",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get MetadataSource",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get MetadataSource').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(activity('Get MetadataSINK').output.childItems,item().name)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T17:00:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_ONLY_NOT_IN_DEST_Another')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get MetadataSource",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Source",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "triggerdata",
									"container": "raw"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": null,
								"modifiedDatetimeEnd": null,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get MetadataSINK",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Source",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "files",
									"container": "silver"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach Source",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get MetadataSource",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ForEach SINK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get MetadataSource').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition for file compare",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(variables('sink_file'),item().name)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy data from source",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_Source",
														"type": "DatasetReference",
														"parameters": {
															"p_folder": "triggerdata",
															"container": "raw"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Source",
														"type": "DatasetReference",
														"parameters": {
															"p_folder": "files",
															"container": "silver"
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "ForEach SINK",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get MetadataSINK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get MetadataSINK').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Append variable sink",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "sink_file",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"sink_file": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T20:16:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_RAW_SILVER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from raw to silver",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@pipeline().parameters.WindowStartTime",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.WindowEndTime",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "silver"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"WindowStartTime": {
						"type": "string",
						"defaultValue": {
							"type": "Expression",
							"value": "@trigger().outputs.WindowStartTime"
						}
					},
					"WindowEndTime": {
						"type": "string",
						"defaultValue": {
							"type": "Expression",
							"value": "@trigger().outputs.WindowEndTime"
						}
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-07T09:46:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_RAW_SILVER_Storage_Event')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from raw to silver",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "storagecontainer"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-07T11:07:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Copy_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.Windowsendtime",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "silver"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Windowsstarttime": {
						"type": "string"
					},
					"Windowsendtime": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-07T05:23:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Different_file_type_load1202')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_multi_file",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "triggerdata"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Switch file",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().name",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "products.csv",
												"activities": [
													{
														"name": "Copy PROD data_copy",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"modifiedDatetimeStart": null,
																	"modifiedDatetimeEnd": null,
																	"wildcardFolderPath": "triggerdata",
																	"wildcardFileName": "*prod*",
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings",
																	"copyBehavior": "PreserveHierarchy"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "DS_PARAMETER_FILE",
																"type": "DatasetReference",
																"parameters": {
																	"folder": "triggerdata",
																	"filename": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "DS_Input_csv",
																"type": "DatasetReference",
																"parameters": {
																	"container": "product"
																}
															}
														]
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Copy Sales data",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"modifiedDatetimeStart": null,
															"modifiedDatetimeEnd": null,
															"wildcardFolderPath": "triggerdata",
															"wildcardFileName": "*sale*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_PARAMETER_FILE",
														"type": "DatasetReference",
														"parameters": {
															"folder": "SALES",
															"filename": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Input_csv",
														"type": "DatasetReference",
														"parameters": {
															"container": "sales"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T08:23:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_multi_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Exception_Handle')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Message",
							"value": 1
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Message",
							"value": 2
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Message",
							"value": "success2"
						}
					},
					{
						"name": "Set Error",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable3",
								"dependencyConditions": [
									"Skipped",
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Error_Message",
							"value": {
								"value": "@concat(activity('Set variable1')?.Error?.Message, '  |  ' , activity('Set variable2')?.Error?.Message,  '  |  ', activity('Set variable3')?.Error?.Message)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stored procedure for log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sendNotification",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CUSTOM_LOG_USP]",
							"storedProcedureParameters": {
								"ERROR_MESSAGE": {
									"value": {
										"value": "@variables('Error_Message')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PIPELINENAME": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RUNID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Source_onprem_Sqlserver",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sendNotification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"url": {
								"value": "https://prod-11.northcentralus.logic.azure.com:443/workflows/ae6c34d1e83d4584ac09df04ac1dbfff/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=VS78bGr5BBPvV5CTk2EGWor8trFjmB5ez9d01Cferhc",
								"type": "Expression"
							},
							"body": {
								"value": "{\"PipeLineName\":\"@{pipeline().Pipeline}\",\n\"ERROR\":\"@{variables('Error_Message')}\",\n\"PipeLineRunid\":\"@{pipeline().RunId}\"}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Message": {
						"type": "Integer"
					},
					"Error_Message": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-11T11:05:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Source_onprem_Sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Exception_Handle_parallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Message",
							"value": 1
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Message",
							"value": 2
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Message",
							"value": "success2"
						}
					},
					{
						"name": "Set Error",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Skipped",
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Error_Message",
							"value": {
								"value": "@concat(activity('Set variable1')?.Error?.Message, '  |  ' , activity('Set variable2')?.Error?.Message,  '  |  ', activity('Set variable3')?.Error?.Message)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stored procedure for log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sendNotification",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CUSTOM_LOG_USP]",
							"storedProcedureParameters": {
								"ERROR_MESSAGE": {
									"value": {
										"value": "@variables('Error_Message')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PIPELINENAME": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RUNID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Source_onprem_Sqlserver",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sendNotification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"url": {
								"value": "https://prod-11.northcentralus.logic.azure.com:443/workflows/ae6c34d1e83d4584ac09df04ac1dbfff/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=VS78bGr5BBPvV5CTk2EGWor8trFjmB5ez9d01Cferhc",
								"type": "Expression"
							},
							"body": {
								"value": "{\"PipeLineName\":\"@{pipeline().Pipeline}\",\n\"ERROR\":\"@{variables('Error_Message')}\",\n\"PipeLineRunid\":\"@{pipeline().RunId}\"}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Message": {
						"type": "Integer"
					},
					"Error_Message": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-11T11:05:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Source_onprem_Sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_File_Type_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata for files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							},
							"fieldList": [
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach File type",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata for files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata for files').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition check filetype",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(toUpper(split(item().name,'.')[1]),'CSV')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy data of  JSON",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFileName": "*json",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "JsonReadSettings"
														}
													},
													"sink": {
														"type": "JsonSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "JsonWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_JSON",
														"type": "DatasetReference",
														"parameters": {
															"container_tgt": "raw"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_JSON",
														"type": "DatasetReference",
														"parameters": {
															"container_tgt": "silver/JSON"
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy data of  CSV",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFileName": "*csv",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_Input_csv",
														"type": "DatasetReference",
														"parameters": {
															"container": "raw"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Input_csv",
														"type": "DatasetReference",
														"parameters": {
															"container": "silver/CSV"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-10T11:31:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_File_Type_Load_copy_switch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata for files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							},
							"fieldList": [
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach File type",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata for files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata for files').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Switch files to different folders",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@{split(item().name,'.')[1]}",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "CSV",
												"activities": [
													{
														"name": "Copy data of  CSV_copy",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"wildcardFileName": {
																		"value": "*CSV",
																		"type": "Expression"
																	},
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings",
																	"copyBehavior": "PreserveHierarchy"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".csv"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "DS_Input_csv",
																"type": "DatasetReference",
																"parameters": {
																	"container": "raw"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "DS_Input_csv",
																"type": "DatasetReference",
																"parameters": {
																	"container": "silver/CSV"
																}
															}
														]
													}
												]
											},
											{
												"value": "json",
												"activities": [
													{
														"name": "Copy data of  JSON_copy1",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"wildcardFileName": {
																		"value": "*json",
																		"type": "Expression"
																	},
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings",
																	"copyBehavior": "PreserveHierarchy"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "DS_JSON",
																"type": "DatasetReference",
																"parameters": {
																	"container_tgt": "raw"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "DS_JSON",
																"type": "DatasetReference",
																"parameters": {
																	"container_tgt": "silver/JSON"
																}
															}
														]
													}
												]
											},
											{
												"value": "txt",
												"activities": [
													{
														"name": "Copy data of  TXT",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"wildcardFileName": {
																		"value": "*txt",
																		"type": "Expression"
																	},
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings",
																	"copyBehavior": "PreserveHierarchy"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "DS_Input_csv",
																"type": "DatasetReference",
																"parameters": {
																	"container": "raw"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "DS_Input_csv",
																"type": "DatasetReference",
																"parameters": {
																	"container": "silver/TXT"
																}
															}
														]
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Copy data of  DOCX",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"modifiedDatetimeStart": null,
															"modifiedDatetimeEnd": null,
															"wildcardFileName": {
																"value": "*docx",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".docx"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_Input_csv",
														"type": "DatasetReference",
														"parameters": {
															"container": "raw"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Input_csv",
														"type": "DatasetReference",
														"parameters": {
															"container": "silver/DOCX"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T08:40:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LOG_Information')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from raw to silver",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "silver"
								}
							}
						]
					},
					{
						"name": "logs",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data from raw to silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "pipelineid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "pipelinename",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Info",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_log_json",
										"type": "LinkedServiceReference"
									},
									"path": "raw/silver"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_log_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_multi_file",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "silver"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T10:21:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_log_Json')]",
				"[concat(variables('factoryId'), '/datasets/DS_multi_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Miini_project')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Metada_mimi",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from METADATA",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQLDBA_mini",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LK_Metada_mimi",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LK_Metada_mimi').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metada",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_metadata_exists",
											"type": "DatasetReference",
											"parameters": {
												"SCHEMA_NAME": {
													"value": "@item().SCHEMANAME",
													"type": "Expression"
												},
												"TABLE_NAME": {
													"value": "@item().TABLENAME",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										]
									}
								},
								{
									"name": "If Condition exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metada",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Get Metada').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 2
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy data from SRC to TGT",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".csv"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_metadata_exists",
														"type": "DatasetReference",
														"parameters": {
															"SCHEMA_NAME": {
																"value": "@item().SCHEMANAME",
																"type": "Expression"
															},
															"TABLE_NAME": {
																"value": "@item().TABLENAME",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Tatget_mimi",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Stored procedure Success",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data from SRC to TGT",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[PIPELINE_LOG_USP]",
													"storedProcedureParameters": {
														"COPYACTIVITY_END_TIME": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').ExecutionEndTime ",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"COPYACTIVITY_START_TIME": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').ExecutionStartTime ",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"COPYDURATION_IN_SECS": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.copyDuration",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"DATAFACTORY_NAME": {
															"value": {
																"value": "@pipeline().DataFactory ",
																"type": "Expression"
															},
															"type": "String"
														},
														"DESTINATION": {
															"value": {
																"value": "@item().blobcontainer ",
																"type": "Expression"
															},
															"type": "String"
														},
														"EFFECTIVEINTERGATIONRUNTIME": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.effectiveIntegrationRuntime ",
																"type": "Expression"
															},
															"type": "String"
														},
														"ERROR_MESSAGE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').error ",
																"type": "Expression"
															},
															"type": "String"
														},
														"EXECUTION_STATUS": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').status ",
																"type": "Expression"
															},
															"type": "String"
														},
														"EXECUTION_STATUS_CODE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').statuscode",
																"type": "Expression"
															},
															"type": "String"
														},
														"NO_PARALLELCOPIES": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.usedParallelCopies ",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"PIPELINENAME": {
															"value": {
																"value": "@pipeline().Pipeline ",
																"type": "Expression"
															},
															"type": "String"
														},
														"ROWSCOPIED": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.rowscopied ",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ROWSREAD": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.rowsread ",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RUNID": {
															"value": null,
															"type": "String"
														},
														"SINK_TYPE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.executiondetails[0].sink.type ",
																"type": "Expression"
															},
															"type": "String"
														},
														"SOURCE": {
															"value": {
																"value": "@item().tablename",
																"type": "Expression"
															},
															"type": "String"
														},
														"SOURCE_TYPE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.executiondetails[0].source.type ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERID": {
															"value": {
																"value": "@pipeline().TriggerId ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERNAME": {
															"value": {
																"value": "@pipeline().TriggerName ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERTIME": {
															"value": {
																"value": "@pipeline().TriggerTime ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERTYPE": {
															"value": {
																"value": "@pipeline().TriggerType",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_SQLDBA_mini",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Stored procedure Failure",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data from SRC to TGT",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[PIPELINE_LOG_USP]",
													"storedProcedureParameters": {
														"COPYACTIVITY_END_TIME": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').ExecutionEndTime ",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"COPYACTIVITY_START_TIME": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').ExecutionStartTime ",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"COPYDURATION_IN_SECS": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.copyDuration",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"DATAFACTORY_NAME": {
															"value": {
																"value": "@pipeline().DataFactory ",
																"type": "Expression"
															},
															"type": "String"
														},
														"DESTINATION": {
															"value": {
																"value": "@item().blobcontainer ",
																"type": "Expression"
															},
															"type": "String"
														},
														"EFFECTIVEINTERGATIONRUNTIME": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.effectiveIntegrationRuntime ",
																"type": "Expression"
															},
															"type": "String"
														},
														"ERROR_MESSAGE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').error ",
																"type": "Expression"
															},
															"type": "String"
														},
														"EXECUTION_STATUS": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').status ",
																"type": "Expression"
															},
															"type": "String"
														},
														"EXECUTION_STATUS_CODE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').statuscode",
																"type": "Expression"
															},
															"type": "String"
														},
														"NO_PARALLELCOPIES": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.usedParallelCopies ",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"PIPELINENAME": {
															"value": {
																"value": "@pipeline().Pipeline ",
																"type": "Expression"
															},
															"type": "String"
														},
														"ROWSCOPIED": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.rowscopied ",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ROWSREAD": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.rowsread ",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RUNID": {
															"value": null,
															"type": "String"
														},
														"SINK_TYPE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.executiondetails[0].sink.type ",
																"type": "Expression"
															},
															"type": "String"
														},
														"SOURCE": {
															"value": {
																"value": "@item().tablename",
																"type": "Expression"
															},
															"type": "String"
														},
														"SOURCE_TYPE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.executiondetails[0].source.type ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERID": {
															"value": {
																"value": "@pipeline().TriggerId ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERNAME": {
															"value": {
																"value": "@pipeline().TriggerName ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERTIME": {
															"value": {
																"value": "@pipeline().TriggerTime ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERTYPE": {
															"value": {
																"value": "@pipeline().TriggerType",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_SQLDBA_mini",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-08T13:49:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_metadata_exists')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Number_of_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_multi_file",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "triggerdata"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "file_name",
										"value": {
											"value": "@{item().name}",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "no_of_files",
							"value": {
								"value": "@length(variables('file_name'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable names",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "file_name_quated",
							"value": {
								"value": "@variables('file_name')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"file_name": {
						"type": "Array"
					},
					"no_of_files": {
						"type": "Integer"
					},
					"file_name_quated": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T06:44:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_multi_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_delete_old_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_multi_file",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "triggerdata"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_multi_file",
											"type": "DatasetReference",
											"parameters": {
												"p_folder": "triggerdata"
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Get Metadata2').output.lastModified",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Delete1",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_multi_file",
														"type": "DatasetReference",
														"parameters": {
															"p_folder": "triggerdata"
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_Multi_file",
															"type": "LinkedServiceReference"
														},
														"path": "raw/triggerdata"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"wildcardFileName": {
															"value": "@activity('Get Metadata1').output.itemName",
															"type": "Expression"
														},
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T11:42:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_multi_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_send_attachment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_attach_file",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filefullpath",
										"value": {
											"value": "@concat('/error-log/',item().name)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Web1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"linkedServices": [
											{
												"referenceName": "LS_attach_file",
												"type": "LinkedServiceReference"
											}
										],
										"datasets": [
											{
												"referenceName": "DS_attach_file",
												"type": "DatasetReference",
												"parameters": {}
											}
										],
										"url": "https://prod-11.northcentralus.logic.azure.com:443/workflows/ae6c34d1e83d4584ac09df04ac1dbfff/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=VS78bGr5BBPvV5CTk2EGWor8trFjmB5ez9d01Cferhc",
										"body": {
											"value": "{\"PipeLineName\":\"@{pipeline().Pipeline}\",\n\"ADF\":\"@{pipeline().DataFactory}\",\n\"PipeLineRunid\":\"@{pipeline().RunId}\"}",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"filefullpath": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-11T17:29:01Z"
			},
			"dependsOn": []
		}
	]
}