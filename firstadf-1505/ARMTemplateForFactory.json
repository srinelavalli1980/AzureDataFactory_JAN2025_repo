{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "firstadf-1505"
		},
		"LS_ADLS_metadata_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS_metadata'"
		},
		"LS_Multi_file_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_Multi_file'"
		},
		"LS_SQLDBA_mini_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQLDBA_mini'"
		},
		"LS_Source_onprem_Sqlserver_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Source_onprem_Sqlserver'",
			"defaultValue": "integrated security=True;Data Source=DESKTOP-NUVB7F9\\SQLEXPRESS;Initial Catalog=devjan"
		},
		"LS_Source_onprem_Sqlserver_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_Source_onprem_Sqlserver'"
		},
		"LS_TGT_Cloud_Sqlserver_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_TGT_Cloud_Sqlserver'"
		},
		"LS_attach_file_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_attach_file'"
		},
		"LS_log_json_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_log_json'"
		},
		"LS_ADLS_metadata_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://devjanbatchadlsgen2.dfs.core.windows.net/"
		},
		"LS_Multi_file_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://devjanbatchadlsgen2.dfs.core.windows.net/"
		},
		"LS_SQLDBA_mini_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "jan-batch-sql-server.database.windows.net"
		},
		"LS_SQLDBA_mini_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "jan-azure-db"
		},
		"LS_SQLDBA_mini_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminuser"
		},
		"LS_Source_onprem_Sqlserver_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "DESKTOP-NUVB7F9\\SRINIVASARAO"
		},
		"LS_log_json_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://devjanbatchadlsgen2.dfs.core.windows.net/"
		},
		"tr_storage_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/dab63fa7-b658-4f30-9c43-166248715acc/resourceGroups/Dattha/providers/Microsoft.Storage/storageAccounts/devjanbatchadlsgen2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_ONLY_NOT_IN_DESTINATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from raw to silver",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "silver"
								}
							}
						]
					},
					{
						"name": "Get MetadataSource",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Source",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "triggerdata",
									"container": "raw"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": null,
								"modifiedDatetimeEnd": null,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get MetadataSINK",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Source",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "files",
									"container": "silver"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get MetadataSINK",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get MetadataSource",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get MetadataSource').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(activity('Get MetadataSINK').output.childItems,item().name)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T17:00:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Input_csv')]",
				"[concat(variables('factoryId'), '/datasets/DS_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_ONLY_NOT_IN_DEST_Another')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get MetadataSource",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Source",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "triggerdata",
									"container": "raw"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": null,
								"modifiedDatetimeEnd": null,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get MetadataSINK",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Source",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "files",
									"container": "silver"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach Source",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get MetadataSource",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ForEach SINK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get MetadataSource').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition for file compare",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(variables('sink_file'),item().name)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy data from source",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_Source",
														"type": "DatasetReference",
														"parameters": {
															"p_folder": "triggerdata",
															"container": "raw"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Source",
														"type": "DatasetReference",
														"parameters": {
															"p_folder": "files",
															"container": "silver"
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "ForEach SINK",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get MetadataSINK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get MetadataSINK').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Append variable sink",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "sink_file",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"sink_file": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T20:16:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_RAW_SILVER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from raw to silver",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@pipeline().parameters.WindowStartTime",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.WindowEndTime",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "silver"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"WindowStartTime": {
						"type": "string",
						"defaultValue": {
							"type": "Expression",
							"value": "@trigger().outputs.WindowStartTime"
						}
					},
					"WindowEndTime": {
						"type": "string",
						"defaultValue": {
							"type": "Expression",
							"value": "@trigger().outputs.WindowEndTime"
						}
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-07T09:46:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Input_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY_RAW_SILVER_Storage_Event')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from raw to silver",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "storagecontainer"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-07T11:07:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Input_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Copy_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data using query",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from Customers where updated_at > '2025-02-05 13:26:55.093'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"customer_id"
									]
								},
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_onprem_ss",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_azure_cloud_ss",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-06T15:59:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_onprem_ss')]",
				"[concat(variables('factoryId'), '/datasets/DS_azure_cloud_ss')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Copy_activity_WM_Parameter_using_File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_Metadata_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_Metadata_lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data using query",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "get_NEWWM",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "get_OLDWM",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().TABLE_NAME} where @{item().WaterMark_Column}  > '@{activity('get_OLDWM').output.firstRow.OLDWM}' and @{item().WaterMark_Column}  <= '@{activity('get_NEWWM').output.firstRow.NEWWM}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"isolationLevel": "Serializable",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": {
													"value": "@item().MERGE_KEY",
													"type": "Expression"
												}
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_onprem_ss",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_azure_cloud_ss_parameter",
											"type": "DatasetReference",
											"parameters": {
												"SINK_TABLE_NAME": {
													"value": "@{item().TABLE_NAME}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "get_OLDWM",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select WatermarkValue as OLDWM from watermarktable where TableName = '@{item().TABLE_NAME}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_azure_cloud_ss_parameter",
											"type": "DatasetReference",
											"parameters": {
												"SINK_TABLE_NAME": {
													"value": "@{item().TABLE_NAME}",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "get_NEWWM",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select max(@{item().WaterMark_Column}) as NEWWM from @{item().TABLE_NAME}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_onprem_ss",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "SP_WM_Update",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data using query",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_write_watermark]",
										"storedProcedureParameters": {
											"LastModifiedtime": {
												"value": {
													"value": "@{activity('get_NEWWM').output.firstRow.NEWWM}",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"TableName": {
												"value": {
													"value": "@{item().TABLE_NAME}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_TGT_Cloud_Sqlserver",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "get_Metadata_lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_Metadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-07T04:06:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Metadata')]",
				"[concat(variables('factoryId'), '/datasets/DS_onprem_ss')]",
				"[concat(variables('factoryId'), '/datasets/DS_azure_cloud_ss_parameter')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_TGT_Cloud_Sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Copy_activity_using_watermark')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data using query",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "get_OLDWM",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get_NEWWM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * from Customers where updated_at > '@{activity('get_OLDWM').output.firstRow.OLDWM}' and updated_at <= '@{activity('get_NEWWM').output.firstRow.NEWWM}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"customer_id"
									]
								},
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_onprem_ss",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_azure_cloud_ss",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "get_OLDWM",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select WatermarkValue from watermarktable where TableName = 'CUSTOMERS'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_azure_cloud_ss",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "get_NEWWM",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from customers",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_onprem_ss",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SP_WM_Update",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data using query",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@activity('get_NEWWM').output.firstRow.NEWWM",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"TableName": {
									"value": "CUSTOMERS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_TGT_Cloud_Sqlserver",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-06T15:59:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_onprem_ss')]",
				"[concat(variables('factoryId'), '/datasets/DS_azure_cloud_ss')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_TGT_Cloud_Sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Copy_activity_using_watermark_Parameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data using query",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "get_NEWWM",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "get_OLDWM",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().TABLE_NAME} where @{item().WaterMark_Column}  > '@{activity('get_OLDWM').output.firstRow.OLDWM}' and @{item().WaterMark_Column}  <= '@{activity('get_NEWWM').output.firstRow.NEWWM}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"isolationLevel": "Serializable",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": {
													"value": "@item().MERGE_KEY",
													"type": "Expression"
												}
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_onprem_ss",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_azure_cloud_ss_parameter",
											"type": "DatasetReference",
											"parameters": {
												"SINK_TABLE_NAME": {
													"value": "@{item().TABLE_NAME}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "get_OLDWM",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select WatermarkValue as OLDWM from watermarktable where TableName = '@{item().TABLE_NAME}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_azure_cloud_ss_parameter",
											"type": "DatasetReference",
											"parameters": {
												"SINK_TABLE_NAME": {
													"value": "@{item().TABLE_NAME}",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "get_NEWWM",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select max(@{item().WaterMark_Column}) as NEWWM from @{item().TABLE_NAME}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_onprem_ss",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "SP_WM_Update",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data using query",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_write_watermark]",
										"storedProcedureParameters": {
											"LastModifiedtime": {
												"value": {
													"value": "@{activity('get_NEWWM').output.firstRow.NEWWM}",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"TableName": {
												"value": {
													"value": "@{item().TABLE_NAME}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_TGT_Cloud_Sqlserver",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TableList": {
						"type": "array",
						"defaultValue": [
							{
								"TABLE_NAME": "CATEGORIES",
								"WaterMark_Column": "updated_at",
								"MERGE_KEY": [
									"category_id"
								]
							},
							{
								"TABLE_NAME": "CUSTOMERS",
								"WaterMark_Column": "updated_at",
								"MERGE_KEY": [
									"customer_id"
								]
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-06T18:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_onprem_ss')]",
				"[concat(variables('factoryId'), '/datasets/DS_azure_cloud_ss_parameter')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_TGT_Cloud_Sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Copy_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.Windowsendtime",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "silver"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Windowsstarttime": {
						"type": "string"
					},
					"Windowsendtime": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-07T05:23:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Input_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Different_file_type_load1202')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_multi_file",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "triggerdata"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Switch file",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().name",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "products.csv",
												"activities": [
													{
														"name": "Copy PROD data_copy",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"modifiedDatetimeStart": null,
																	"modifiedDatetimeEnd": null,
																	"wildcardFolderPath": "triggerdata",
																	"wildcardFileName": "*prod*",
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings",
																	"copyBehavior": "PreserveHierarchy"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "DS_PARAMETER_FILE",
																"type": "DatasetReference",
																"parameters": {
																	"folder": "triggerdata",
																	"filename": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "DS_Input_csv",
																"type": "DatasetReference",
																"parameters": {
																	"container": "product"
																}
															}
														]
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Copy Sales data",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"modifiedDatetimeStart": null,
															"modifiedDatetimeEnd": null,
															"wildcardFolderPath": "triggerdata",
															"wildcardFileName": "*sale*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_PARAMETER_FILE",
														"type": "DatasetReference",
														"parameters": {
															"folder": "SALES",
															"filename": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Input_csv",
														"type": "DatasetReference",
														"parameters": {
															"container": "sales"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T08:23:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_multi_file')]",
				"[concat(variables('factoryId'), '/datasets/DS_PARAMETER_FILE')]",
				"[concat(variables('factoryId'), '/datasets/DS_Input_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Exception_Handle')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Message",
							"value": 1
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Message",
							"value": 2
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Message",
							"value": "success2"
						}
					},
					{
						"name": "Set Error",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable3",
								"dependencyConditions": [
									"Skipped",
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Error_Message",
							"value": {
								"value": "@concat(activity('Set variable1')?.Error?.Message, '  |  ' , activity('Set variable2')?.Error?.Message,  '  |  ', activity('Set variable3')?.Error?.Message)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stored procedure for log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sendNotification",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CUSTOM_LOG_USP]",
							"storedProcedureParameters": {
								"ERROR_MESSAGE": {
									"value": {
										"value": "@variables('Error_Message')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PIPELINENAME": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RUNID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Source_onprem_Sqlserver",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sendNotification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"url": {
								"value": "https://prod-11.northcentralus.logic.azure.com:443/workflows/ae6c34d1e83d4584ac09df04ac1dbfff/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=VS78bGr5BBPvV5CTk2EGWor8trFjmB5ez9d01Cferhc",
								"type": "Expression"
							},
							"body": {
								"value": "{\"PipeLineName\":\"@{pipeline().Pipeline}\",\n\"ERROR\":\"@{variables('Error_Message')}\",\n\"PipeLineRunid\":\"@{pipeline().RunId}\"}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Message": {
						"type": "Integer"
					},
					"Error_Message": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-11T11:05:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Source_onprem_Sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Exception_Handle_parallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Message",
							"value": 1
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Message",
							"value": 2
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Message",
							"value": "success2"
						}
					},
					{
						"name": "Set Error",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Skipped",
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Error_Message",
							"value": {
								"value": "@concat(activity('Set variable1')?.Error?.Message, '  |  ' , activity('Set variable2')?.Error?.Message,  '  |  ', activity('Set variable3')?.Error?.Message)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stored procedure for log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sendNotification",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CUSTOM_LOG_USP]",
							"storedProcedureParameters": {
								"ERROR_MESSAGE": {
									"value": {
										"value": "@variables('Error_Message')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PIPELINENAME": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RUNID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Source_onprem_Sqlserver",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sendNotification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"url": {
								"value": "https://prod-11.northcentralus.logic.azure.com:443/workflows/ae6c34d1e83d4584ac09df04ac1dbfff/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=VS78bGr5BBPvV5CTk2EGWor8trFjmB5ez9d01Cferhc",
								"type": "Expression"
							},
							"body": {
								"value": "{\"PipeLineName\":\"@{pipeline().Pipeline}\",\n\"ERROR\":\"@{variables('Error_Message')}\",\n\"PipeLineRunid\":\"@{pipeline().RunId}\"}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Message": {
						"type": "Integer"
					},
					"Error_Message": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-11T11:05:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Source_onprem_Sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_File_Type_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata for files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							},
							"fieldList": [
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach File type",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata for files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata for files').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition check filetype",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(toUpper(split(item().name,'.')[1]),'CSV')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy data of  JSON",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFileName": "*json",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "JsonReadSettings"
														}
													},
													"sink": {
														"type": "JsonSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "JsonWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_JSON",
														"type": "DatasetReference",
														"parameters": {
															"container_tgt": "raw"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_JSON",
														"type": "DatasetReference",
														"parameters": {
															"container_tgt": "silver/JSON"
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy data of  CSV",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFileName": "*csv",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_Input_csv",
														"type": "DatasetReference",
														"parameters": {
															"container": "raw"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Input_csv",
														"type": "DatasetReference",
														"parameters": {
															"container": "silver/CSV"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-10T11:31:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Input_csv')]",
				"[concat(variables('factoryId'), '/datasets/DS_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_File_Type_Load_copy_switch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata for files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							},
							"fieldList": [
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach File type",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata for files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata for files').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Switch files to different folders",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@{split(item().name,'.')[1]}",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "CSV",
												"activities": [
													{
														"name": "Copy data of  CSV_copy",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"wildcardFileName": {
																		"value": "*CSV",
																		"type": "Expression"
																	},
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings",
																	"copyBehavior": "PreserveHierarchy"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".csv"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "DS_Input_csv",
																"type": "DatasetReference",
																"parameters": {
																	"container": "raw"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "DS_Input_csv",
																"type": "DatasetReference",
																"parameters": {
																	"container": "silver/CSV"
																}
															}
														]
													}
												]
											},
											{
												"value": "json",
												"activities": [
													{
														"name": "Copy data of  JSON_copy1",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"wildcardFileName": {
																		"value": "*json",
																		"type": "Expression"
																	},
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings",
																	"copyBehavior": "PreserveHierarchy"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "DS_JSON",
																"type": "DatasetReference",
																"parameters": {
																	"container_tgt": "raw"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "DS_JSON",
																"type": "DatasetReference",
																"parameters": {
																	"container_tgt": "silver/JSON"
																}
															}
														]
													}
												]
											},
											{
												"value": "txt",
												"activities": [
													{
														"name": "Copy data of  TXT",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"wildcardFileName": {
																		"value": "*txt",
																		"type": "Expression"
																	},
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings",
																	"copyBehavior": "PreserveHierarchy"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "DS_Input_csv",
																"type": "DatasetReference",
																"parameters": {
																	"container": "raw"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "DS_Input_csv",
																"type": "DatasetReference",
																"parameters": {
																	"container": "silver/TXT"
																}
															}
														]
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Copy data of  DOCX",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"modifiedDatetimeStart": null,
															"modifiedDatetimeEnd": null,
															"wildcardFileName": {
																"value": "*docx",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".docx"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_Input_csv",
														"type": "DatasetReference",
														"parameters": {
															"container": "raw"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Input_csv",
														"type": "DatasetReference",
														"parameters": {
															"container": "silver/DOCX"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T08:40:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Input_csv')]",
				"[concat(variables('factoryId'), '/datasets/DS_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_KEYVAULT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "https://@{pipeline().parameters.p_keyvault_name}.vault.azure.net/secrets/@{pipeline().parameters.p_secret_info}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_value",
							"value": {
								"value": "@activity('Web1').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_keyvault_name": {
						"type": "string",
						"defaultValue": "srinikeyvault"
					},
					"p_secret_info": {
						"type": "string",
						"defaultValue": "adfdemo-secrets/35862fd3ae8e4177b0b2696a38ab720b?api-version=7.0"
					}
				},
				"variables": {
					"var_value": {
						"type": "String",
						"defaultValue": "123456"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T19:19:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LOG_Information')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from raw to silver",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "raw"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "silver"
								}
							}
						]
					},
					{
						"name": "logs",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data from raw to silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "pipelineid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "pipelinename",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Info",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_log_json",
										"type": "LinkedServiceReference"
									},
									"path": "raw/silver"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_log_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_multi_file",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "silver"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T10:21:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Input_csv')]",
				"[concat(variables('factoryId'), '/datasets/DS_log_Json')]",
				"[concat(variables('factoryId'), '/datasets/DS_multi_file')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_log_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Miini_project')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Metada_mimi",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from METADATA",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQLDBA_mini",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LK_Metada_mimi",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LK_Metada_mimi').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metada",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_metadata_exists",
											"type": "DatasetReference",
											"parameters": {
												"SCHEMA_NAME": {
													"value": "@item().SCHEMANAME",
													"type": "Expression"
												},
												"TABLE_NAME": {
													"value": "@item().TABLENAME",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										]
									}
								},
								{
									"name": "If Condition exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metada",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Get Metada').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 2
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy data from SRC to TGT",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".csv"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_metadata_exists",
														"type": "DatasetReference",
														"parameters": {
															"SCHEMA_NAME": {
																"value": "@item().SCHEMANAME",
																"type": "Expression"
															},
															"TABLE_NAME": {
																"value": "@item().TABLENAME",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Tatget_mimi",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Stored procedure Success",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data from SRC to TGT",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[PIPELINE_LOG_USP]",
													"storedProcedureParameters": {
														"COPYACTIVITY_END_TIME": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').ExecutionEndTime ",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"COPYACTIVITY_START_TIME": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').ExecutionStartTime ",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"COPYDURATION_IN_SECS": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.copyDuration",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"DATAFACTORY_NAME": {
															"value": {
																"value": "@pipeline().DataFactory ",
																"type": "Expression"
															},
															"type": "String"
														},
														"DESTINATION": {
															"value": {
																"value": "@item().blobcontainer ",
																"type": "Expression"
															},
															"type": "String"
														},
														"EFFECTIVEINTERGATIONRUNTIME": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.effectiveIntegrationRuntime ",
																"type": "Expression"
															},
															"type": "String"
														},
														"ERROR_MESSAGE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').error ",
																"type": "Expression"
															},
															"type": "String"
														},
														"EXECUTION_STATUS": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').status ",
																"type": "Expression"
															},
															"type": "String"
														},
														"EXECUTION_STATUS_CODE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').statuscode",
																"type": "Expression"
															},
															"type": "String"
														},
														"NO_PARALLELCOPIES": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.usedParallelCopies ",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"PIPELINENAME": {
															"value": {
																"value": "@pipeline().Pipeline ",
																"type": "Expression"
															},
															"type": "String"
														},
														"ROWSCOPIED": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.rowscopied ",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ROWSREAD": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.rowsread ",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RUNID": {
															"value": null,
															"type": "String"
														},
														"SINK_TYPE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.executiondetails[0].sink.type ",
																"type": "Expression"
															},
															"type": "String"
														},
														"SOURCE": {
															"value": {
																"value": "@item().tablename",
																"type": "Expression"
															},
															"type": "String"
														},
														"SOURCE_TYPE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.executiondetails[0].source.type ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERID": {
															"value": {
																"value": "@pipeline().TriggerId ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERNAME": {
															"value": {
																"value": "@pipeline().TriggerName ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERTIME": {
															"value": {
																"value": "@pipeline().TriggerTime ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERTYPE": {
															"value": {
																"value": "@pipeline().TriggerType",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_SQLDBA_mini",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Stored procedure Failure",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data from SRC to TGT",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[PIPELINE_LOG_USP]",
													"storedProcedureParameters": {
														"COPYACTIVITY_END_TIME": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').ExecutionEndTime ",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"COPYACTIVITY_START_TIME": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').ExecutionStartTime ",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"COPYDURATION_IN_SECS": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.copyDuration",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"DATAFACTORY_NAME": {
															"value": {
																"value": "@pipeline().DataFactory ",
																"type": "Expression"
															},
															"type": "String"
														},
														"DESTINATION": {
															"value": {
																"value": "@item().blobcontainer ",
																"type": "Expression"
															},
															"type": "String"
														},
														"EFFECTIVEINTERGATIONRUNTIME": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.effectiveIntegrationRuntime ",
																"type": "Expression"
															},
															"type": "String"
														},
														"ERROR_MESSAGE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').error ",
																"type": "Expression"
															},
															"type": "String"
														},
														"EXECUTION_STATUS": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').status ",
																"type": "Expression"
															},
															"type": "String"
														},
														"EXECUTION_STATUS_CODE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').statuscode",
																"type": "Expression"
															},
															"type": "String"
														},
														"NO_PARALLELCOPIES": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.usedParallelCopies ",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"PIPELINENAME": {
															"value": {
																"value": "@pipeline().Pipeline ",
																"type": "Expression"
															},
															"type": "String"
														},
														"ROWSCOPIED": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.rowscopied ",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ROWSREAD": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.rowsread ",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RUNID": {
															"value": null,
															"type": "String"
														},
														"SINK_TYPE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.executiondetails[0].sink.type ",
																"type": "Expression"
															},
															"type": "String"
														},
														"SOURCE": {
															"value": {
																"value": "@item().tablename",
																"type": "Expression"
															},
															"type": "String"
														},
														"SOURCE_TYPE": {
															"value": {
																"value": "@activity('Copy data from SRC to TGT').output.executiondetails[0].source.type ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERID": {
															"value": {
																"value": "@pipeline().TriggerId ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERNAME": {
															"value": {
																"value": "@pipeline().TriggerName ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERTIME": {
															"value": {
																"value": "@pipeline().TriggerTime ",
																"type": "Expression"
															},
															"type": "String"
														},
														"TRIGGERTYPE": {
															"value": {
																"value": "@pipeline().TriggerType",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_SQLDBA_mini",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-08T13:49:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQLDBA_mini')]",
				"[concat(variables('factoryId'), '/datasets/DS_metadata_exists')]",
				"[concat(variables('factoryId'), '/datasets/DS_Tatget_mimi')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDBA_mini')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Number_of_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_multi_file",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "triggerdata"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "file_name",
										"value": {
											"value": "@{item().name}",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "no_of_files",
							"value": {
								"value": "@length(variables('file_name'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable names",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "file_name_quated",
							"value": {
								"value": "@variables('file_name')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"file_name": {
						"type": "Array"
					},
					"no_of_files": {
						"type": "Integer"
					},
					"file_name_quated": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T06:44:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_multi_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_WAIT_ACTIVITY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-07T08:33:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_delete_old_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_multi_file",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "triggerdata"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_multi_file",
											"type": "DatasetReference",
											"parameters": {
												"p_folder": "triggerdata"
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Get Metadata2').output.lastModified",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Delete1",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_multi_file",
														"type": "DatasetReference",
														"parameters": {
															"p_folder": "triggerdata"
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_Multi_file",
															"type": "LinkedServiceReference"
														},
														"path": "raw/triggerdata"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"wildcardFileName": {
															"value": "@activity('Get Metadata1').output.itemName",
															"type": "Expression"
														},
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T11:42:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_multi_file')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_Multi_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_on_prem_data_migration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from on prem to cloud",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadCommitted",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"validateDataConsistency": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_onprem_ss",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_azure_cloud_ss",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-06T15:59:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_onprem_ss')]",
				"[concat(variables('factoryId'), '/datasets/DS_azure_cloud_ss')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_onprem_ADLS_error_log')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from onprem to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from [DBO].[CUSTOM_LOG]",
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadCommitted",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_onprem_ss",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Input_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "error-log"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-11T11:29:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_onprem_ss')]",
				"[concat(variables('factoryId'), '/datasets/DS_Input_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_send_attachment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_attach_file",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filefullpath",
										"value": {
											"value": "@concat('/error-log/',item().name)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Web1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"linkedServices": [
											{
												"referenceName": "LS_attach_file",
												"type": "LinkedServiceReference"
											}
										],
										"datasets": [
											{
												"referenceName": "DS_attach_file",
												"type": "DatasetReference",
												"parameters": {}
											}
										],
										"url": "https://prod-11.northcentralus.logic.azure.com:443/workflows/ae6c34d1e83d4584ac09df04ac1dbfff/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=VS78bGr5BBPvV5CTk2EGWor8trFjmB5ez9d01Cferhc",
										"body": {
											"value": "{\"PipeLineName\":\"@{pipeline().Pipeline}\",\n\"ADF\":\"@{pipeline().DataFactory}\",\n\"PipeLineRunid\":\"@{pipeline().RunId}\"}",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"filefullpath": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-11T17:29:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_attach_file')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_attach_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_two_files_dianamic_mapping')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata bring file names",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Source",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": "triggerdata",
									"container": "raw"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": null,
								"modifiedDatetimeEnd": null,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata bring file names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata bring file names').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data dynamic",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": null,
												"modifiedDatetimeEnd": null,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"value": "@if(contains(item().name,'sales'),pipeline().parameters.p_mapping1,pipeline().parameters.p_mapping2)",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Source",
											"type": "DatasetReference",
											"parameters": {
												"p_folder": "triggerdata",
												"container": "raw"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Source",
											"type": "DatasetReference",
											"parameters": {
												"p_folder": "dianamic",
												"container": "silver"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_mapping2": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "ID",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "ID",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Type",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Type",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "SKU",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "SKU",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Published",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Published",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Is featured?",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Is featured?",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Visibility in catalog",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Visibility in catalog",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Short description",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Short description",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Description",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Description",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Date sale price starts",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Date sale price starts",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Date sale price ends",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Date sale price ends",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Tax status",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Tax status",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Tax class",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Tax class",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "In stock?",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "In stock?",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Stock",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Stock",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Backorders allowed?",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Backorders allowed?",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Sold individually?",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Sold individually?",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Weight (lbs)",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Weight (lbs)",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Length (in)",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Length (in)",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Width (in)",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Width (in)",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Height (in)",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Height (in)",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Allow customer reviews?",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Allow customer reviews?",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Purchase note",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Purchase note",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Sale price",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Sale price",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Regular price",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Regular price",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Categories",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Categories",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Tags",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Tags",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Shipping class",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Shipping class",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Images",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Images",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Download limit",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Download limit",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Download expiry days",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Download expiry days",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Parent",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Parent",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Grouped products",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Grouped products",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Upsells",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Upsells",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Cross-sells",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Cross-sells",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "External URL",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "External URL",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Button text",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Button text",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Position",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Position",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Attribute 1 name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Attribute 1 name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Attribute 1 value(s)",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Attribute 1 value(s)",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Attribute 1 visible",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Attribute 1 visible",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Attribute 1 global",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Attribute 1 global",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Attribute 2 name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Attribute 2 name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Attribute 2 value(s)",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Attribute 2 value(s)",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Attribute 2 visible",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Attribute 2 visible",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Attribute 2 global",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Attribute 2 global",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Meta: _wpcom_is_markdown",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Meta: _wpcom_is_markdown",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Download 1 name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Download 1 name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Download 1 URL",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Download 1 URL",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Download 2 name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Download 2 name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Download 2 URL",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Download 2 URL",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					},
					"p_mapping1": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "ORDERNUMBER",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "ORDERNUMBER",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "QUANTITYORDERED",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "QUANTITYORDERED",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "PRICEEACH",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "PRICEEACH",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "ORDERLINENUMBER",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "ORDERLINENUMBER",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "SALES",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "SALES",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "ORDERDATE",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "ORDERDATE",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "STATUS",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "STATUS",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "QTR_ID",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "QTR_ID",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "MONTH_ID",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "MONTH_ID",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "YEAR_ID",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "YEAR_ID",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "PRODUCTLINE",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "PRODUCTLINE",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "MSRP",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "MSRP",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "PRODUCTCODE",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "PRODUCTCODE",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "CUSTOMERNAME",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "CUSTOMERNAME",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "PHONE",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "PHONE",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "ADDRESSLINE1",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "ADDRESSLINE1",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "ADDRESSLINE2",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "ADDRESSLINE2",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "CITY",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "CITY",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "STATE",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "STATE",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "POSTALCODE",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "POSTALCODE",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "COUNTRY",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "COUNTRY",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "TERRITORY",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "TERRITORY",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "CONTACTLASTNAME",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "CONTACTLASTNAME",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "CONTACTFIRSTNAME",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "CONTACTFIRSTNAME",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "DEALSIZE",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "DEALSIZE",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T20:19:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Input_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_metadata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_metadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_metadata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_tgt": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().container_tgt",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_metadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_metadata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "metadata.json",
						"fileSystem": "metadata"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_metadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PARAMETER_FILE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Multi_file",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Multi_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQLDBA_mini')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDBA_mini",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDBA_mini')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Multi_file",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder": {
						"type": "string"
					},
					"container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@item",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Multi_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Tatget_mimi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_metadata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "mimitarget",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_metadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_attach_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_attach_file",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "error-log"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_attach_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_azure_cloud_ss')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_TGT_Cloud_Sqlserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_TGT_Cloud_Sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_azure_cloud_ss_parameter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_TGT_Cloud_Sqlserver",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SINK_TABLE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().SINK_TABLE_NAME",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_TGT_Cloud_Sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_getMetaData_mini')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDBA_mini",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SCHEMA_NAME": {
						"type": "string"
					},
					"TABLE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDBA_mini')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_log_Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_log_json",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "emptyfile.json",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_log_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_metadata_exists')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDBA_mini",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SCHEMA_NAME": {
						"type": "string"
					},
					"TABLE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SCHEMA_NAME",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TABLE_NAME",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDBA_mini')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_multi_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Multi_file",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().p_folder",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Multi_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_onprem_ss')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Source_onprem_Sqlserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Source_onprem_Sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_metadata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_metadata_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_metadata_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Multi_file')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_Multi_file_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_Multi_file_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQLDBA_mini')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQLDBA_mini_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQLDBA_mini_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQLDBA_mini_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQLDBA_mini_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Source_onprem_Sqlserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_Source_onprem_Sqlserver_connectionString')]",
					"userName": "[parameters('LS_Source_onprem_Sqlserver_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_Source_onprem_Sqlserver_password')]"
					}
				},
				"connectVia": {
					"referenceName": "on-prem-shir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/on-prem-shir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_TGT_Cloud_Sqlserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_TGT_Cloud_Sqlserver_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_attach_file')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_attach_file_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_log_json')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_log_json_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_log_json_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_storage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_COPY_RAW_SILVER_Storage_Event",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/",
					"blobPathEndsWith": ".CSV",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_storage_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_COPY_RAW_SILVER_Storage_Event')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/on-prem-shir')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/credential1')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/dab63fa7-b658-4f30-9c43-166248715acc/resourceGroups/Dattha/providers/Microsoft.ManagedIdentity/userAssignedIdentities/testuserassignedmanagement"
				}
			},
			"dependsOn": []
		}
	]
}